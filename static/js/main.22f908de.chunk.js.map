{"version":3,"sources":["components/Home.tsx","services/Constants.ts","services/WebSocketService.ts","services/ContextBeanAware.ts","services/Languages.ts","services/CashService.ts","services/AjaxService.ts","components/Header.tsx","components/Deck/parts/OwnCard.tsx","components/Deck/parts/OwnCardsContainer.tsx","components/Deck/parts/DeckCard.tsx","components/Deck/parts/DeckCardsContainer.tsx","components/Deck/parts/InfoPanel/InputAndButton.tsx","components/Deck/parts/InfoPanel/InfoPanel.tsx","components/Deck/Deck.tsx","services/GameService.ts","components/Game/GameCreate.tsx","components/Game/GameSearch.tsx","components/Game/GameCurrent.tsx","components/Game/GameHelp.tsx","components/Game/Game.tsx","components/Game/GameInfo.tsx","components/MainMenu/Login.tsx","components/MainMenu/MainMenu.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Deck/parts/InfoPanel/genie.gif"],"names":["Home","props","state","hits","isLoading","error","to","React","Component","base","Const","URL","BASE","WS","GAME","GAMES","LOGIN","LOGOUT","VERSION","subscribtions","subscribeCalls","stompClient","reconnect","isConnected","closeEventCallback","one1","console","log","connectFunc","connect","window","setTimeout","clearTimeout","sock","SockJS","Stomp","over","forEach","func","topic","subscribe","callback","has","subscribtion","set","unsubscribe","k","v","disconnect","Map","add","bean","Error","beanId","context","warn","get","remove","Lang","414","BG","EN","25","483","412","413","213","26","205","47","201","433","425","29","409","410","417","416","861","862","863","864","481","gameId","language","infoScreen","ownCardProps","deckCardProps","currentPhase","clue","id","WebSocketService","onMessage","wsMsg","jsn","JSON","parse","body","deck","onDeckCardsMessage","hand","onHandCardsMessage","info","onInfoMessage","onWarnMessage","onClueMessage","setPhaseAndCode","phase","code","setClue","updateInfoPanel","DeckCardsContainer","ContextBeanAware","setStateCardProps","OwnCardsContainer","text","getTextForLanguage","addToInfoScreen","setConfirmButtonVisible","message","push","indexOf","header1","InfoPanel1","updateView","execute","method","url","data","headers","arg","withCredentials","axios","doPost","getHeaders","doPut","doGet","doDelete","Header","initialTitle","isConfirmButtonVisibleTimeout","changeState","obj","setState","changeButtonVisibility","nextPhase","AjaxService","CashService","then","catch","e","confirmNextPhase","isConfirmButtonVisible","service","exit","isVisible","document","title","this","Btn","activeClassName","type","className","label","onClick","withRouter","OwnCard","isEnabled","setImage","imgSrc","setOpacity","opacity","placeCardOnDeck","cardId","promise","alt","style","src","newProps","currentState","getCardProps","cardProps","onCardDrawResults","ws","res","clickOnCard","cardOnclickFunc","indents","i","length","key","makeCards","DeckCard","doVote","Refs","InputAndButton","heading","useState","clueValue","setInputValue","inputProps","placeholder","value","onChange","elem","srcElement","target","onKeyPress","Game","setView","view","getView","one","startsWith","logo","border","boxShadow","columns","accessor","maxWidth","sortable","defaultPageSize","showPagination","TheadComponent","Deck","InfoPanel","gameSearchResults","createGame","name","hidden","lang","searchGame","joinGame","onKeyPressCreate","nameValue","onChangeCreate","GameService","history","pathname","setStateGameSearchResults","onKeyPressSearch","searchNameVal","onChangeSearch","searchGames","seeGameInfo","rowInfo","tableData","srchInputProps","getTrProps","show","GameCreate","GameSearch","GameCurrent","GameHelp","person","GameInfo","location","original","present","players","Login","dologin","pswd","usrnm","MainMenu","classList","App","paddingTop","basename","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"sNA0BiBA,E,kDAtBf,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAEDC,MAAQ,CACXC,KAAM,GACNC,WAAW,EACXC,MAAO,MANa,E,kGActB,OACE,6BACE,uCACA,kBAAC,IAAD,CAAMC,GAAG,SAAT,e,GAlBWC,IAAMC,W,kDCHnBC,EAAO,mCAeEC,EAbD,CACZC,IAAK,CACHC,KAAMH,EACNI,GAAIJ,EAAO,KACXK,KAAML,EAAO,QACbM,MAAON,EAAO,SACdO,MAAOP,EAAO,QACdQ,OAAQR,EAAO,UAGjBS,QAAS,OCoEI,M,kDArEX,WAAYjB,GAAY,IAAD,8BACnB,cAAMA,IANVkB,mBAKuB,IAJvBC,oBAIuB,IAHvBC,iBAGuB,IAFvBC,eAEuB,IADvBC,iBACuB,IAQvBC,mBAAqB,SAACC,GAClBC,QAAQC,IAAIF,GACZ,EAAKF,aAAc,EAEnB,IAAIK,EAAc,EAAKC,QACnBP,EAAYQ,OAAOC,YAAW,WAE9BH,IACAE,OAAOE,aAAaV,KACrB,MAjBgB,EAoBvBO,QAAU,WACN,IAAII,EAAO,IAAIC,IAAOxB,EAAMC,IAAIE,IAShC,EAAKQ,YAAcc,IAAMC,KAAKH,GAC1B,EAAKZ,aACL,EAAKA,YAAYQ,QAAQ,QAAS,YAThB,WAClB,EAAKN,aAAc,EACnB,EAAKH,eAAeiB,SAAQ,SAACC,EAAMC,GAC/B,EAAKC,UAAUD,EAAOD,QAMqC,EAAKd,mBAAoB,YAhCzE,EAoCvBgB,UAAY,SAACD,EAAeE,GACxB,GAAyB,OAArB,EAAKpB,aAAyBkB,GAAUE,IAIxC,EAAKtB,cAAcuB,IAAIH,GAI3B,GAAK,EAAKhB,YAAV,CAKA,IAAIoB,EAAe,EAAKtB,YAAYmB,UAAUD,EAAOE,GACrD,EAAKtB,cAAcyB,IAAIL,EAAOI,QAL1B,EAAKvB,eAAewB,IAAIL,EAAOE,IA9ChB,EAsDvBI,YAAc,WACV,EAAK1B,cAAckB,SAAQ,SAACS,EAAGC,GAC3BrB,QAAQC,IAAImB,GACZpB,QAAQC,IAAIoB,GACZD,EAAED,kBA1Da,EA8DvBG,WAAa,WACe,MAApB,EAAK3B,aACL,EAAKA,YAAY2B,aAErBtB,QAAQC,IAAI,iBAhEZ,EAAKR,cAAgB,IAAI8B,IACzB,EAAK7B,eAAiB,IAAI6B,IAC1B,EAAK1B,aAAc,EAJA,E,UANIhB,IAAMC,WA2EtB,CAAqB,ICtCrB,M,kDAtCb,WAAYP,GAAY,IAAD,8BACrB,cAAMA,IAIRiD,IAAM,SAACC,GACL,IAAKA,IAASA,EAAKjD,MACjB,MAAM,IAAIkD,MAAM,yCAA2CD,EAAO,MAEpE,IAAIE,EAASF,EAAKE,QAAUF,EAAKjD,MAAMmD,QAAUF,EAAKlD,MAAMoD,OAC5D,IAAKA,EACH,MAAM,IAAID,MAAM,yCAA2CC,EAAS,MAElE,EAAKC,QAAQD,IACf3B,QAAQ6B,KAAK,uBAAyBF,EAAS,iDAEjD,EAAKC,QAAQD,GAAUF,GAhBF,EAmBvBK,IAAM,SAACH,GACL,IAAKA,EACH,MAAM,IAAID,MAAM,yCAA2CC,EAAS,MAEtE,OAAO,EAAKC,QAAQD,IAvBC,EA0BvBI,OAAS,SAACN,GACR,IAAKA,EACH,MAAM,IAAIC,MAAM,uCAAyCD,EAAO,MAElE,GAAoB,kBAATA,EAAX,CAIA,IAAIE,EAASF,EAAKE,QAAUF,EAAKjD,MAAMmD,QAAUF,EAAKlD,MAAMoD,cACrD,EAAKC,QAAQD,eAJX,EAAKC,QAAQH,IA7BtB,EAAKG,QAAU,GAFM,E,UAFM/C,IAAMC,WAwCtB,CAAqB,ICmDrBkD,EA5FF,CACXC,IAAK,CACHC,GAAI,wGACJC,GAAI,oBAENC,GAAI,CACFF,GAAI,gKACJC,GAAI,oCAENE,IAAK,CACHH,GAAI,kJACJC,GAAI,4BAENG,IAAK,CACHJ,GAAI,mLACJC,GAAI,kDAENI,IAAK,CACHL,GAAI,kMACJC,GAAI,gCAENK,IAAK,CACHN,GAAI,wGACJC,GAAI,2BAENM,GAAI,CACFP,GAAI,4IACJC,GAAI,0BAENO,IAAK,CACHR,GAAI,mGACJC,GAAI,sBAENQ,GAAI,CACFT,GAAI,4HACJC,GAAI,0BAENS,IAAK,CACHV,GAAI,gFACJC,GAAI,yBAENU,IAAK,CACHX,GAAI,sHACJC,GAAI,mCAENW,IAAK,CACHZ,GAAI,uLACJC,GAAI,+BAENY,GAAI,CACFb,GAAI,6IACJC,GAAI,+BAENa,IAAK,CACHd,GAAI,2DACJC,GAAI,oBAENc,IAAK,CACHf,GAAI,yGACJC,GAAI,kCAENe,IAAK,CACHhB,GAAI,kJACJC,GAAI,8BAENgB,IAAK,CACHjB,GAAI,8HACJC,GAAI,gCAENiB,IAAK,CACHlB,GAAI,2FACJC,GAAI,oBAENkB,IAAK,CACHnB,GAAI,8GACJC,GAAI,4BAENmB,IAAK,CACHpB,GAAI,uEACJC,GAAI,wBAENoB,IAAK,CACHrB,GAAI,gKACJC,GAAI,+BAENqB,IAAK,CACHtB,GAAI,kGACJC,GAAI,8BAEN3C,QAAS,OCqEI,M,kDAjJb,WAAYjB,GAAa,IAAD,8BACtB,cAAMA,IARRkF,YAOwB,IANxBC,cAMwB,IALxBC,gBAKwB,IAJxBC,kBAIwB,IAHxBC,mBAGwB,IAFxBC,kBAEwB,IADxBC,UACwB,IAYxBjD,UAAY,SAACkD,GACX,EAAKP,OAASO,EACdC,EAAiBnD,UAAU,UAAY,EAAK2C,OAAS,OAAQ,EAAKS,WAClED,EAAiBnD,UAAU,eAAiB,EAAK2C,OAAS,OAAQ,EAAKS,YAfjD,EAyBxBA,UAAY,SAACC,GACXnE,QAAQC,IAAIkE,GAEZ,IAAIC,EAAMC,KAAKC,MAAMH,EAAMI,MACtBH,IAGCA,EAAII,MACR,EAAKC,mBAAmBL,EAAII,MACxBJ,EAAIM,MACR,EAAKC,mBAAmBP,EAAIM,MACxBN,EAAIQ,MACR,EAAKC,cAAcT,EAAIQ,MACnBR,EAAIvC,MACR,EAAKiD,cAAcV,EAAIvC,MACnBuC,EAAIL,MACR,EAAKgB,cAAcX,EAAIL,QAzCH,EA4CxBiB,gBAAkB,SAACC,EAAeC,GAChC,EAAKpB,aAAemB,GA7CE,EAgDxBF,cAAgB,SAAChB,GAEf/D,QAAQC,IAAI,qFACZD,QAAQC,IAAI8D,GAEZ,EAAKiB,gBAAgBjB,EAAKkB,MAAOlB,EAAKmB,MACpB,MAAdnB,EAAKmB,MACP,EAAKC,QAAQpB,GAEf,EAAKqB,mBAzDiB,EA4DxBX,mBAAqB,SAACD,GACpB,EAAKX,cAAgBW,EACrB,IAAIa,EAAqBC,EAAiBxD,IAAI,uBAEzCuD,GAGLA,EAAmBE,qBAnEG,EAsExBZ,mBAAqB,SAACD,GACpB,EAAKd,aAAec,EACpB,IAAIc,EAAoBF,EAAiBxD,IAAI,sBAExC0D,GAGLA,EAAkBD,qBA7EI,EAgFxBV,cAAgB,SAACD,GACf5E,QAAQC,IAAI,+FACZD,QAAQC,IAAI2E,GACZ,IAAIa,EAAO,EAAKC,mBAAmBd,GACnC,EAAKe,gBAAgBF,GACrB,EAAKT,gBAAgBJ,EAAKK,MAAOL,EAAKM,MACtC,EAAKE,mBAtFiB,EAyFxBN,cAAgB,SAACjD,GACf7B,QAAQ4E,KAAK,mEACb5E,QAAQ4E,KAAK/C,GACb,IAAI4D,EAAO,EAAKC,mBAAmB7D,GACnC,EAAK8D,gBAAgBF,GACrB,EAAKT,gBAAgBnD,EAAKoD,MAAOpD,EAAKqD,MACtC,EAAKU,wBAAwB/D,EAAKqD,MAClC,EAAKE,mBAhGiB,EAoGxBM,mBAAqB,SAACG,GACpB7F,QAAQ4E,KAAK,yEACb,IAAIlB,EAAW,EAAKA,UAAY,KAGhC,OAFY1B,EAAa6D,EAAQX,MAAMxB,IAvGjB,EA4GxBiC,gBAAkB,SAACF,GACjBzF,QAAQC,IAAIwF,GAEZ,EAAK9B,WAAWmC,KAAKL,IA/GC,EAoHxBG,wBAA0B,SAACV,GAGzB,IAAmC,GADhB,CAAC,GAAI,IAAK,IAAK,KACjBa,QAAQb,GAAzB,CAGA,IAAIc,EAAUV,EAAiBxD,IAAI,WAE9BkE,GAILA,EAAQJ,4BAhIc,EAmIxBT,QAAU,SAACpB,GACT,EAAKA,MAAW,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,OAAQ,IApIJ,EAuIxBL,gBAAkB,WAChB,IAAIa,EAAaX,EAAiBxD,IAAI,cACjCmE,GAILA,EAAWC,cA3IX,EAAKvC,WAAa,GAClB,EAAKF,OAAS,KACd,EAAKG,aAAe,KACpB,EAAKC,cAAgB,KACrB,EAAKC,aAAe,KACpB,EAAKJ,SAAW,KAChB,EAAKK,KAAO,KARU,E,UARAlF,IAAMC,WAyJjB,CAAgB,I,iBCtHhB,M,kDArCb,WAAYP,GAAY,IAAD,8BACrB,cAAMA,IAGR4H,QAAU,SAACC,EAAsCC,EAAaC,EAAqBC,GACjF,IAAIC,EAQJ,OAPAA,EAAM,IACFJ,OAASA,EACbI,EAAIH,IAAMA,EACVG,EAAIF,KAAOA,EACXE,EAAIC,iBAAkB,EACtBD,EAAID,QAAUA,EAEPG,IAAMF,IAbQ,EAgBvBG,OAAS,SAACN,EAAaC,EAAqBC,GAC1C,OAAO,EAAKJ,QAAQ,OAAQE,EAAKC,EAAM,EAAKM,WAAWL,KAjBlC,EAoBvBM,MAAQ,SAACR,EAAaC,EAAcC,GAClC,OAAO,EAAKJ,QAAQ,MAAOE,EAAKC,EAAM,EAAKM,WAAWL,KArBjC,EAwBvBO,MAAQ,SAACT,EAAaE,GACpB,OAAO,EAAKJ,QAAQ,MAAOE,EAAK,GAAI,EAAKO,WAAWL,KAzB/B,EA4BvBQ,SAAW,SAACV,EAAaE,GACvB,OAAO,EAAKJ,QAAQ,SAAUE,EAAK,GAAI,EAAKO,WAAWL,KA7BlC,EAgCvBK,WAAa,SAACL,GACZ,OAAOA,GA/BP,EAAK3E,QAAU,GAFM,E,UADC/C,IAAMC,WAsCjB,CAAgB,ICzBzBkI,E,kDAKJ,WAAYzI,GAAe,IAAD,8BACxB,cAAMA,IAJR0I,kBAG0B,IAF1BC,mCAE0B,IAmB1BC,YAAc,SAACC,GACb,EAAKC,SAASD,IApBU,EAuB1BE,uBAAyB,SAACF,GACxB,EAAKC,SAASD,IAxBU,EA2B1BG,UAAY,WACIC,EAAYb,OAAO3H,EAAMC,IAAIC,KAAOuI,EAAYhE,OAAS,cAAe,GAAI,IAElFiE,MAAK,SAACpB,OACXqB,OAAM,SAACC,GACR5H,QAAQrB,MAAMiJ,OAhCQ,EAoC1BC,iBAAmB,WACjB,EAAKR,SAAS,CAAES,wBAAwB,IAC1BN,EAAYb,OAAO3H,EAAMC,IAAIC,KAAOuI,EAAYhE,OAAS,sBAAuB,GAAI,IAE1FiE,MAAK,eACVC,OAAM,SAACC,GACR5H,QAAQrB,MAAMiJ,OA1CQ,EA8C1BhC,wBAA0B,WACxB,GAA0C,MAAtC,EAAKsB,8BAAT,CAIA,IAAIa,EAAO,eAEXA,EAAQV,SAAS,CAAES,wBAAwB,IAE3C,EAAKZ,8BAAgC9G,OAAOC,YAAW,WACrD0H,EAAQV,SAAS,CAAES,wBAAwB,IAC3C1H,OAAOE,aAAayH,EAAQb,+BAC5Ba,EAAQb,8BAAgC,OAEvC,OA5DqB,EA+D1B/F,YAAc,WACZ8C,EAAiB9C,eAhEO,EAmE1B6G,KAAO,WACSR,EAAYV,MAAM9H,EAAMC,IAAIG,KAAOqI,EAAYhE,OAAS,WAAY,KAlElF,EAAKjF,MAAQ,CACXmD,OAAQpD,EAAMoD,OACdsG,WAAW,EACXH,wBAAwB,GAG1B,EAAKb,aAAeiB,SAASC,MAC7B,EAAKjB,8BAAgC,KATb,E,gEAaxB5B,EAAiB9D,IAAI4G,Q,6CAIrB9C,EAAiBvD,OAAOqG,Q,+BAsDxB,IAAIC,EAAM,SAAC9J,GAAD,OACR,6BACE,kBAAC,IAAD,CAAS+J,gBAAgB,SAAS1J,GAAIL,EAAMK,IAC1C,4BAAQ2J,KAAK,SAASC,UAAU,mBAC7BjK,EAAMkK,UAMf,OACE,6BACE,yBAAKD,UAAU,eACb,yBAAKA,UAAU,aACZJ,KAAK5J,MAAMyJ,UAAY,kBAACI,EAAD,CAAKzJ,GAAG,QAAQ6J,MAAM,uDAAkB,KAC/DL,KAAK5J,MAAMyJ,UAAY,kBAACI,EAAD,CAAKzJ,GAAG,QAAQ6J,MAAM,SAAY,KACzDL,KAAK5J,MAAMyJ,UAAY,kBAACI,EAAD,CAAKzJ,GAAG,QAAQ6J,MAAM,SAAY,KAEzDL,KAAK5J,MAAMsJ,uBAEV,4BAAQS,KAAK,SAASG,QAASN,KAAKP,iBAAkBW,UAAU,mBAAhE,aAEA,4BAAQD,KAAK,SAASG,QAASN,KAAKb,UAAWiB,UAAU,mBAAzD,UAIF,4BAAQD,KAAK,SAASG,QAASN,KAAKjH,YAAaqH,UAAU,mBAA3D,iBACA,4BAAQD,KAAK,SAASG,QAASN,KAAKJ,KAAMQ,UAAU,mBAApD,YAEDJ,KAAK5J,MAAMyJ,UAAY,0BAAMO,UAAU,eAAhB,UAA8C,W,GAzG3D3J,IAAMC,WA+GZ6J,cAAW3B,GCnDX4B,E,kDAnEb,WAAYrK,GAAmB,IAAD,8BAC5B,cAAMA,IAHRsK,eAE8B,IA4B9B1B,YAAc,SAACC,GACb,EAAKC,SAASD,IA7Bc,EA+B9B0B,SAAW,SAACC,GACV,EAAK1B,SAAS,CAAE0B,OAAQA,KAhCI,EAmC9BC,WAAa,SAACC,GACZ,EAAK5B,SAAS,CAAE4B,QAASA,KApCG,EAuC9BC,gBAAkB,WAChB,GAAK,EAAKL,UAAV,CAGA,IAAIM,EAAS,EAAK3K,MAAM2K,OAEpBC,EAAU5B,EAAYb,OAAO3H,EAAMC,IAAIC,KAAOuI,EAAYhE,OAAS,cAAgB0F,EAAQ,GAAI,IACnG,EAAKN,WAAY,EAEjBO,EAAQzB,OAAM,SAAChJ,GACbqB,QAAQrB,MAAMA,GACd,EAAKkK,WAAY,OA/CnB,EAAKrK,MAAQ,CACXyK,QAAS1K,EAAM0K,QACfE,OAAQ5K,EAAM4K,OACdJ,OAAQxK,EAAMwK,QAEhB,EAAKF,WAAY,EARW,E,kJA0D5B,OACE,yBAAK7E,GAAG,MAAMwE,UAAU,uCACtB,yBAAKE,QAASN,KAAKc,gBAAiBG,IAAI,aAAaC,MAAO,CAAEL,QAASb,KAAK5J,MAAMyK,SAAWT,UAHhF,oCAIXe,IAAKnB,KAAK5J,MAAMuK,a,gDA3CQS,EAAeC,GAC7C,OAAIA,EAAaR,UAAYO,EAASP,QAC7B,CACLA,QAASO,EAASP,QAClBF,OAAQS,EAAST,QAGd,S,GA5BWlK,IAAMC,WCStB0G,E,kDAIJ,WAAYjH,GAAe,IAAD,8BACxB,cAAMA,IAHRoD,YAE0B,IAiB1B+H,aAAe,WACb,OAAOjC,EAAY7D,cAlBK,EAqB1B2B,kBAAoB,WAClB,EAAK8B,SAAS,CAAEsC,UAAW,EAAKD,kBAtBR,EAyB1BE,kBAAoB,SAACC,GACnB,IAAIC,EAAMzF,KAAKC,MAAMuF,EAAGtF,MACxB,EAAK8C,SAAS,CAAEsC,UAAWG,KA3BH,EA8B1BC,YAAc,SAACC,KA5Bb,EAAKxL,MAAQ,CACXmL,UAAW,EAAKD,gBAElB,EAAK/H,OAASpD,EAAMoD,OALI,E,gEASxB2D,EAAiB9D,IAAI4G,Q,6CAIrB9C,EAAiBvD,OAAOqG,MACxBA,KAAKf,SAAS,CAAEsC,UAAW,S,+BA6C3B,OAEE,yBAAK3F,GAAG,qBAAqBwE,UAAU,OA3BzB,SAAChC,GACf,IAAKA,EACH,OAAQ,kCAGV,IADA,IAAIyD,EAAU,GACLC,EAAI,EAAGA,EAAI1D,EAAI2D,OAAQD,IAAK,CAAC,IAAD,QAC/B3L,EAAQ,CACV4K,OAAM,UAAE3C,EAAI0D,UAAN,aAAE,EAAQf,OAChBJ,OAAM,UAAEvC,EAAI0D,UAAN,aAAE,EAAQnB,OAChBE,QAAO,UAAEzC,EAAI0D,UAAN,aAAE,EAAQjB,QACjBmB,IAAG,UAAK5D,EAAI0D,UAAT,aAAK,EAAQf,QAGlBc,EAAQnE,KACL,SAACoE,EAAW3L,GACX,OACE,yBAAK6L,IAAKF,EAAG1B,UAAU,UACrB,kBAAC,EAAajK,IAHnB,CAKE2L,EAAG3L,IAGV,OAAO0L,EAMJI,CAAUjC,KAAK5J,MAAMmL,gB,GAlEE9K,IAAMC,WAwEvB6J,cAAWnD,GC3CX8E,E,kDApCb,WAAY/L,GAAmB,IAAD,8BAC5B,cAAMA,IAWR4I,YAAc,SAACC,GACb,EAAKC,SAASD,IAbc,EAgB9BmD,OAAS,WACP,IAAIpB,EAAS,EAAK3K,MAAM2K,OAEV3B,EAAYb,OAAO3H,EAAMC,IAAIC,KAAOuI,EAAYhE,OAAS,gBAAkB0F,EAAQ,GAAI,IAC7FxB,OAAM,SAAChJ,GACbqB,QAAQrB,MAAMA,OAnBhB,EAAKH,MAAQ,CACXyK,QAAS1K,EAAM0K,QACfE,OAAQ5K,EAAM4K,OACdJ,OAAQxK,EAAMwK,QALY,E,kGA2B5B,OACE,yBAAK/E,GAAG,aAAawE,UAAU,wCAC7B,yBAAKE,QAASN,KAAKmC,OAAQlB,IAAI,aAAaC,MAAO,CAAEL,QAASb,KAAK5J,MAAMyK,SAAWT,UAHvE,oCAIXe,IAAKnB,KAAK5J,MAAMuK,c,GAhCHlK,IAAMC,WCYvBuG,E,kDAEJ,WAAY9G,GAAe,IAAD,8BACxB,cAAMA,IAFRiM,UAC0B,IAW1BjF,kBAAoB,WAClB,EAAK8B,SAAS,CAAEsC,UAAW,EAAKD,kBAZR,EAe1Ba,OAAS,SAACpB,GACRnJ,QAAQC,IAAI,uBAhBY,EA4B1ByJ,aAAe,WACb,OAAOjC,EAAY5D,eA3BnB,EAAKrF,MAAQ,CACXmD,OAAQpD,EAAMoD,OACdsG,WAAW,EACX0B,UAAW,EAAKD,gBAElB,EAAKc,KAAO,GAPY,E,gEAoBxBlF,EAAiB9D,IAAI4G,Q,6CAGrB9C,EAAiBvD,OAAOqG,MAExBA,KAAKf,SAAS,CAAEsC,UAAW,S,+BAkC3B,OACE,yBAAK3F,GAAG,qBAAqBwE,UAAU,OA3BzB,SAAChC,GAEf,IAAKA,EACH,OAAQ,kCAGV,IADA,IAAIyD,EAAU,GACLC,EAAI,EAAGA,EAAI1D,EAAI2D,OAAQD,IAAK,CAAC,IAAD,QAC/B3L,EAAQ,CACV4K,OAAM,UAAE3C,EAAI0D,UAAN,aAAE,EAAQf,OAChBJ,OAAM,UAAEvC,EAAI0D,UAAN,aAAE,EAAQnB,OAChBE,QAAO,UAAEzC,EAAI0D,UAAN,aAAE,EAAQjB,QACjBmB,IAAG,UAAK5D,EAAI0D,UAAT,aAAK,EAAQf,QAGlBc,EAAQnE,KACL,SAACoE,EAAW3L,GACX,OACE,yBAAK6L,IAAKF,EAAG1B,UAAU,UACrB,kBAAC,EAAgBjK,IAHtB,CAKE2L,EAAG3L,IAGV,OAAO0L,EAKJI,CAAUjC,KAAK5J,MAAMmL,gB,GA/DG9K,IAAMC,WAqExB6J,cAAWtD,G,cC/BXoF,MAlDf,YAA2C,IAAjBC,EAAgB,EAAhBA,QAAgB,EAEP7L,IAAM8L,SAAS,IAFR,mBAEnCC,EAFmC,KAExBC,EAFwB,KAiBxC,SAAS1F,IACP,IAAIiE,EAAU5B,EAAYb,OAAO3H,EAAMC,IAAIC,KAAOuI,EAAYhE,OAAS,QAAS,CAC9E,KAAQmH,GACP,IAEHC,EAAc,IAEdzB,EAAQ1B,MAAK,SAACpB,GACZtG,QAAQC,IAAIqG,MAEXqB,OAAM,SAACC,GACR5H,QAAQrB,MAAMiJ,MAKlB,IAAIkD,EAAa,CACfC,YAAa,aACbC,MAAOJ,EACPK,SAxBF,SAAkBrD,GAChB,IAAIsD,EAAOtD,EAAEuD,YAAcvD,EAAEwD,OAC7BP,EAAcK,EAAKF,QAuBnBK,WAjCF,SAAoBzD,GACJ,UAAVA,EAAEwC,MAGNjF,IACA0F,EAAc,OA+BhB,OACE,6BACE,4BAAKH,GACL,2CAAWI,EAAX,CAAuBvC,KAAK,UAC5B,4BAAQA,KAAK,SAASG,QAASvD,EAASqD,UAAU,mBAAlD,Y,yBChCA8C,E,kDAEJ,WAAY/M,GAAa,IAAD,uBACtB,cAAMA,IAeRgN,QAAU,SAACC,GACT,EAAKnE,SAAS,CAAEmE,KAAMA,KAjBA,EAoBxBtF,WAAa,WACX,EAAKqF,QAAQ,EAAKE,YArBI,EAwBxBA,QAAU,WAAO,IAAD,EAEVhG,EAAe,GAMnB,OALAgC,EAAY9D,WAAWhD,SAAQ,SAAC+K,GACxBA,IACJjG,EAAOiG,MAIT,6BACGjG,EACD,6BACE,OAACgC,QAAD,IAACA,OAAD,EAACA,EAAa1D,MAAO,2CAAiB0D,EAAY1D,MAAgB,GACpE,6BACE,OAAC0D,QAAD,IAACA,GAAD,UAACA,EAAa3D,oBAAd,aAAC,EAA2B6H,WAAW,sBAAqB,OAAClE,QAAD,IAACA,OAAD,EAACA,EAAa1D,MAAO,kBAAC,EAAD,CAAgB2G,QAAQ,WAAc,KApC7H,IAAI9F,EAAO,EAAK6G,UAFM,OAGtB,EAAKjN,MAAQ,CACXgN,KAAM5G,GAJc,E,gEAStBU,EAAiB9D,IAAI4G,Q,6CAIrB9C,EAAiBvD,OAAOqG,Q,+BAgCxB,IAAI9B,EAAO,CAAC,CACV,KAAQ8B,KAAK5J,MAAMgN,KACnB,IAEI,yBAAKhD,UAAU,wBACb,yBAAKe,IAAKqC,IAAMvC,IAAI,aAAab,UAAU,uBA2BnD,OACE,6BACE,kBAAC,IAAD,CAAYA,UAAU,GACpBlC,KAAMA,EACNgD,MATa,CACjBuC,OAAQ,OACRC,UAAW,QAQPC,QA3BQ,CACZ,CACEA,QAAS,CACP,CACE/E,OAAQ,IACRgF,SAAU,QAGZ,CACEhF,OAAQ,IACRgF,SAAU,MACVC,SAAU,QAiBZC,UAAU,EACVC,gBAAiB,EACjBC,gBAAgB,EAChBC,eAAgB,kBAAM,a,GAxFbxN,IAAMC,WA+FV6J,cAAW2C,GCnGpBgB,E,kDACJ,WAAY/N,GAAe,IAAD,8BACxB,cAAMA,IAGR4I,YAAc,SAACC,GACb,EAAKC,SAASD,IALU,EAQ1BE,uBAAyB,SAACF,GACxB,EAAKC,SAASD,IATU,E,qDAcxB,OACE,yBAAKpD,GAAG,MAAMwE,UAAU,4BACtB,kBAAC+D,EAAD,CAAW5K,OAAO,eAClB,kBAAC,EAAD,CAAsBA,OAAO,wBAC7B,kBAAC,EAAD,CAAmBA,OAAO,4B,GAnBf9C,IAAMC,WAyBV6J,cAAW2D,GCPX,M,kDAzBb,WAAY/N,GAAY,IAAD,8BACrB,cAAMA,IAFRiO,uBACuB,IAKvBC,WAAa,SAACC,EAAcC,EAAiBC,GAC3C,OAAOpF,EAAYb,OAAO3H,EAAMC,IAAIG,KAAM,CACxC,KAAQsN,EACR,OAAUC,EACV,KAAQC,GACP,KAVkB,EAcvBC,WAAa,SAACH,EAAcC,EAAiBC,GAE3C,OAAOpF,EAAYV,MAAM9H,EAAMC,IAAII,MAAQ,SAAWqN,EAAO,WAAaC,EAAS,SAAWC,EAAM,KAhB/E,EAmBvBE,SAAW,SAAC9I,GACVyD,EAAY3G,UAAUkD,IAlBtB,EAAKwI,kBAAoB,GAFJ,E,UAFC3N,IAAMC,WA2BjB,CAAgB,ICnBzBwM,E,kDAEJ,WAAY/M,GAAa,IAAD,8BACtB,cAAMA,IAMRwO,iBAAmB,SAACnF,GACJ,UAAVA,EAAEwC,KAGN,EAAK/C,SAAS,CAAE2F,UAAW,MAXL,EAcxBC,eAAiB,SAACrF,GAChB,IAAIsD,EAAOtD,EAAEuD,YAAcvD,EAAEwD,OAC7B,EAAK/D,SAAS,CAAE2F,UAAW9B,EAAKF,SAhBV,EAmBxByB,WAAa,WACGS,EAAYT,WAAW,EAAKjO,MAAMwO,WAAW,EAAO,MAC1DtF,MAAK,SAACpB,GACZmB,EAAY3G,UAAUwF,EAAKA,KAAK,GAAGtC,IACnC,EAAKzF,MAAM4O,QAAQrH,KAAK,CACtBsH,SAAU,aAEXzF,OAAM,SAACC,GACR5H,QAAQrB,MAAMiJ,OAzBhB,EAAKpJ,MAAQ,CACXwO,UAAW,IAHS,E,qDA+Bd,IAAD,EAEHlC,EAAa,CACfC,YAAa,UACbC,MAAK,UAAE5C,KAAK5J,aAAP,aAAE,EAAYwO,UACnB/B,SAAU7C,KAAK6E,eACf5B,WAAYjD,KAAK2E,kBAGnB,OACE,6BACE,4CACA,2CAAWjC,EAAX,CAAuBvC,KAAK,UAC5B,4BAAQA,KAAK,SAASG,QAASN,KAAKqE,WAAYjE,UAAU,mBAA1D,c,GA9CW3J,IAAMC,WAsDV6J,cAAW2C,GCpDpBA,E,kDAEJ,WAAY/M,GAAa,IAAD,8BACtB,cAAMA,IAQR8O,0BAA4B,WAC1B,IAAIvD,EAAMoD,EAAYV,mBAAqB,GAC3C,EAAKnF,SAAS,CAAEmF,kBAAmB1C,KAXb,EAcxBwD,iBAAmB,SAAC1F,GACJ,UAAVA,EAAEwC,KAIN,EAAK/C,SAAS,CAAEkG,cAAe,MAnBT,EAsBxBC,eAAiB,SAAC5F,GAChB,IAAIsD,EAAOtD,EAAEuD,YAAcvD,EAAEwD,OAC7B,EAAK/D,SAAS,CAAEkG,cAAerC,EAAKF,SAxBd,EA4BxByC,YAAc,WACEP,EAAYL,WAAW,EAAKrO,MAAM+O,eAAe,EAAO,MAC9D7F,MAAK,SAACpB,GACZ4G,EAAYV,kBAAoBlG,EAAKA,KACrC,EAAK+G,+BACJ1F,OAAM,SAACC,GACR5H,QAAQrB,MAAMiJ,OAlCM,EAsCxB8F,YAAc,SAACC,GACb,EAAKpP,MAAM4O,QAAQrH,KAAK,CACtBsH,SAAU,aACV5O,MAAOmP,KAvCT,EAAKnP,MAAQ,CACX+O,cAAe,GACff,mBAA8B,OAAXU,QAAW,IAAXA,OAAA,EAAAA,EAAaV,oBAAqB,IAJjC,E,qDA6Cd,IAAD,SACHoB,EAAYxF,KAAK5J,MAAMgO,mBAAqB,GAyB5CqB,EAAiB,CACnB9C,YAAa,UACbC,MAAK,UAAE5C,KAAK5J,aAAP,aAAE,EAAY+O,cACnBtC,SAAU7C,KAAKoF,eACfnC,WAAYjD,KAAKkF,kBAQnB,OACE,6BACE,4CACA,2CAAWO,EAAX,CAA2BtF,KAAK,UAChC,4BAAQA,KAAK,SAASG,QAASN,KAAKqF,YAAajF,UAAU,mBAA3D,SACA,kBAAC,IAAD,CAAYA,UAAU,sBACpBlC,KAAMsH,EACN7B,QA1CQ,CACZ,CACEA,QAAS,CACP,CACE/E,OAAQ,OACRgF,SAAU,QAEZ,CACEhF,OAAQ,qBACRgF,SAAU,WAEZ,CACEhF,OAAQ,UACRgF,SAAU,WAEZ,CACEhF,OAAQ,WACRgF,SAAU,WA0BZE,UAAU,EACVC,gBAAiB,EACjB7C,MAfa,CACjBuC,OAAQ,OACRC,UAAW,QAePgC,WAAY,SAACtP,EAAYmP,GACvB,MAAO,CACLjF,QAAS,SAACd,GACR,EAAK8F,YAAYC,QAKzB,kC,GAzGW9O,IAAMC,WA+GV6J,cAAW2C,GCjHpBA,E,kDACJ,WAAY/M,GAAa,IAAD,8BACtB,cAAMA,IAORkO,WAAa,aARW,EAWxBiB,YAAc,SAACC,GACb,EAAKpP,MAAM4O,QAAQrH,KAAK,CACtBsH,SAAU,aACV5O,MAAOmP,KAZT,EAAKnP,MAAQ,CACXwO,UAAW,GACXR,kBAAmBU,EAAYV,mBAJX,E,qDAmBtB,OACE,6BACE,6CACA,sCACA,4BACA,4BAAQjE,KAAK,SAASG,QAASN,KAAKqE,WAAYjE,UAAU,mBAA1D,sB,GAzBW3J,IAAMC,WA+BV6J,cAAW2C,GCnCpBA,E,kDAEJ,WAAY/M,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,GAFS,E,qDAQtB,OACE,6BACE,+CADF,6O,GAXaK,IAAMC,WAoBV6J,cAAW2C,GCbpBA,G,kDACJ,WAAY/M,GAAa,IAAD,8BACtB,cAAMA,IAMRwP,KAAO,SAACvC,GACO,MAATA,EACF,EAAKnE,SAAS,CAAEmE,KAAM,kBAACwC,EAAD,CAAYrM,OAAO,mBACvB,MAAT6J,EACT,EAAKnE,SAAS,CAAEmE,KAAM,kBAACyC,EAAD,CAAYtM,OAAO,mBACvB,MAAT6J,EACT,EAAKnE,SAAS,CAAEmE,KAAM,kBAAC0C,EAAD,CAAavM,OAAO,oBAE1C,EAAK0F,SAAS,CAAEmE,KAAM,kBAAC2C,EAAD,CAAUxM,OAAO,kBAfnB,EAmBxB+L,YAAc,SAACC,GACb,EAAKpP,MAAM4O,QAAQrH,KAAK,CACtBsH,SAAU,aACV5O,MAAOmP,KApBT,EAAKnP,MAAQ,CACXgN,KAAM,IAHc,E,qDA0Bd,IAAD,OACH4C,EAAS,CAAC,CACZ,OAAU,4BAAQ7F,KAAK,SAASG,QAAS,WAAQ,EAAKqF,KAAK,MAAQvF,UAAU,mBAAnE,cACV,OAAU,4BAAQD,KAAK,SAASG,QAAS,WAAQ,EAAKqF,KAAK,MAAQvF,UAAU,mBAAnE,kBACV,KAAQ,4BAAQD,KAAK,SAASG,QAAS,WAAQ,EAAKqF,KAAK,MAAQvF,UAAU,mBAAnE,eACR,KAAQ,4BAAQD,KAAK,SAASG,QAAS,WAAQ,EAAKqF,KAAK,MAAQvF,UAAU,mBAAnE,YA+BV,OACE,6BACE,6BACE,kBAAC,IAAD,CAAYA,UAAU,GACpBlC,KAAM8H,EACN9E,MAVW,CACjBuC,OAAQ,OACRC,UAAW,QASLC,QAlCM,CACZ,CACEA,QAAS,CACP,CACE/E,OAAQ,IACRgF,SAAU,UAEZ,CACEhF,OAAQ,IACRgF,SAAU,UAEZ,CACEhF,OAAQ,IACRgF,SAAU,QAGZ,CACEhF,OAAQ,IACRgF,SAAU,WAiBVE,UAAU,EACVC,gBAAiB,EACjBC,gBAAgB,EAChBC,eAAgB,kBAAM,QAExB,8BAEDjE,KAAK5J,MAAMgN,U,GA7ED3M,IAAMC,WAoFV6J,eAAW2C,ICxFpB+C,G,kDAEJ,WAAY9P,GAAa,IAAD,kCACtB,cAAMA,IAFR+H,UACwB,IAKxBwG,SAAW,WACTI,EAAYJ,SAAS,EAAKxG,KAAK,GAAGtC,KAJlC,EAAKsC,KAAO,QAAC/H,QAAD,IAACA,GAAD,UAACA,EAAO+P,gBAAR,iBAAC,EAAiB9P,aAAlB,aAAC,EAAwB+P,YAAa,EAF5B,E,qDAUtB,IAAIC,EAAU,CACZ,CACEzC,QAAS,CACP,CACE/E,OAAQ,YAAcoB,KAAK9B,KAAK,GAAGmI,QACnCzC,SAAU,WAEZ,CACEhF,OAAQ,UACRgF,SAAU,WAEZ,CACEhF,OAAQ,WACRgF,SAAU,WASlB,OACE,6BACE,0CAAgB5D,KAAK9B,KAAK,GAAGoG,MAC7B,yBAAKlE,UAAU,eACb,kBAAC,IAAD,CAAYA,UAAU,sBACpBlC,KAAM8B,KAAK9B,KACXgD,MATW,GAUXyC,QAASyC,EACTtC,UAAU,EACVC,gBAAiB,EACjBC,gBAAgB,IAElB,8BAEF,4BAAQ7D,KAAK,SAASG,QAASN,KAAK0E,SAAUtE,UAAU,mBAAxD,c,GAhDe3J,IAAMC,WAsDd6J,eAAW0F,ICLXK,G,kDAnDb,WAAYnQ,GAAa,IAAD,8BACtB,cAAMA,IAOR8M,WAAa,SAACzD,GACE,UAAVA,EAAEwC,MAGN,EAAKuE,UACL,EAAKtH,SAAS,CAAE2F,UAAW,OAbL,EAgBxB/B,SAAW,SAACrD,GACV,IAAIsD,EAAOtD,EAAEuD,YAAcvD,EAAEwD,OAC7B,EAAK/D,SAAS,CAAE2F,UAAW9B,EAAKF,SAlBV,EAqBxB2D,QAAU,WAAO,IAAD,EACd3O,QAAQC,IAAI,EAAKzB,MAAMwO,WAEvB,IAAI5D,EAAU5B,EAAYb,OAAO3H,EAAMC,IAAIK,MAAO,KAAM,CACtDsP,KAAM,IACNC,MAAK,UAAE,EAAKrQ,aAAP,aAAE,EAAYwO,YAErB,EAAK3F,SAAS,CAAE2F,UAAW,KAC3B5D,EAAQ1B,MAAK,SAACpB,GACZrC,EAAiB9D,cA3BnB,EAAK3B,MAAQ,CACXwO,UAAW,IAJS,E,qDAkCd,IAAD,EACHlC,EAAa,CACfC,YAAa,UACbC,MAAK,UAAE5C,KAAK5J,aAAP,aAAE,EAAYwO,UACnB/B,SAAU7C,KAAK6C,SACfI,WAAYjD,KAAKiD,YAEnB,OACE,6BACE,uCACA,2CAAWP,EAAX,CAAuBvC,KAAK,UAC5B,4BAAQA,KAAK,SAASG,QAASN,KAAKuG,QAASnG,UAAU,mBAAvD,gB,GA9CY3J,IAAMC,WCOpBgQ,G,kDACJ,WAAYvQ,GAAa,IAAD,8BACtB,cAAMA,IAMRwP,KAAO,SAACvC,GACO,MAATA,EACF,EAAKnE,SAAS,CAAEmE,KAAM,kBAAC,GAAD,QACJ,MAATA,EACT,EAAKnE,SAAS,CAAEmE,KAAM,kBAACyC,EAAD,CAAYtM,OAAO,mBACvB,MAAT6J,EACT,EAAKnE,SAAS,CAAEmE,KAAM,kBAAC0C,EAAD,CAAavM,OAAO,oBAE1C,EAAK0F,SAAS,CAAEmE,KAAM,kBAAC2C,EAAD,CAAUxM,OAAO,kBAfnB,EAmBxB+L,YAAc,SAACC,GACb,EAAKpP,MAAM4O,QAAQrH,KAAK,CACtBsH,SAAU,aACV5O,MAAOmP,KApBT,EAAKnP,MAAQ,CACXgN,KAAM,IAHc,E,qDA0Bd,IAAD,OACH4C,EAAS,CAAC,CACZ,OAAU,4BAAQ7F,KAAK,SAASG,QAAS,WAAQ,EAAKqF,KAAK,MAAQvF,UAAU,mBAAnE,WACV,OAAU,4BAAQD,KAAK,SAASG,QAAS,WAAQ,EAAKqF,KAAK,MAAQvF,UAAU,mBAAnE,kBACV,KAAQ,4BAAQD,KAAK,SAASG,QAAS,WAAQ,EAAKqF,KAAK,MAAQvF,UAAU,mBAAnE,eACR,KAAQ,4BAAQD,KAAK,SAASG,QAAS,WAAQ,EAAKqF,KAAK,MAAQvF,UAAU,mBAAnE,YA+BV,OACE,6BACE,6BACE,kBAAC,IAAD,CAAYA,UAAU,GACpBlC,KAAM8H,EACN9E,MAVW,CACjBuC,OAAQ,OACRC,UAAW,QASLC,QAlCM,CACZ,CACEA,QAAS,CACP,CACE/E,OAAQ,IACRgF,SAAU,UAEZ,CACEhF,OAAQ,IACRgF,SAAU,UAEZ,CACEhF,OAAQ,IACRgF,SAAU,QAGZ,CACEhF,OAAQ,IACRgF,SAAU,WAiBVE,UAAU,EACVC,gBAAiB,EACjBC,gBAAgB,EAChBC,eAAgB,kBAAM,QAExB,8BAEDjE,KAAK5J,MAAMgN,U,GA7EG3M,IAAMC,WAoFd6J,eAAWmG,I,OC1F1B5G,SAAS3D,KAAKwK,UAAUvN,IAAI,cAE5B,IAiBewN,GAjBO,WACpB,OACE,yBAAKxG,UAAU,YAAYc,MAAO,CAAE2F,WAAY,KAC9C,kBAAC,IAAD,CAAQC,SAAU,KAChB,kBAAC,EAAD,CAAQvN,OAAO,YACf,kBAAC,IAAD,KACE,kBAAE,IAAF,CAAQwN,KAAK,QAAQC,UAAWN,KAChC,kBAAE,IAAF,CAAQK,KAAK,QAAQC,UAAW9D,KAChC,kBAAE,IAAF,CAAQ6D,KAAK,aAAaC,UAAWf,KACrC,kBAAE,IAAF,CAAQc,KAAK,QAAQC,UAAW9C,IAChC,kBAAE,IAAF,CAAQ6C,KAAK,IAAIC,UAAW9Q,QCVlB+Q,QACW,cAA7BjP,OAAOkO,SAASgB,UAEe,UAA7BlP,OAAOkO,SAASgB,UAEhBlP,OAAOkO,SAASgB,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASvH,SAASwH,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnI,MAAK,SAAAoI,GACjCA,EAAaC,iB,mBE7InBC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.22f908de.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Home extends React.Component {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Welcome</h1>\n        <Link to=\"/deck\">  deck</Link>\n      </div >\n    )}\n  }\n\n  export default Home;\n","const base = 'https://tixid-app.herokuapp.com/';\r\n//const base = 'http://localhost:5000/';\r\nconst Const = {\r\n  URL: {\r\n    BASE: base,\r\n    WS: base + 'ws',\r\n    GAME: base + 'game/',\r\n    GAMES: base + 'games/',\r\n    LOGIN: base + 'login',\r\n    LOGOUT: base + 'logout'\r\n  },\r\n\r\n  VERSION: '1.0'\r\n}\r\n\r\nexport default Const;\r\n","import React from 'react';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport Const from '../services/Constants';\n\nclass WebSocketService extends React.Component {\n    subscribtions: Map<string, any>\n    subscribeCalls: Map<string, Function>\n    stompClient: any;\n    reconnect: any;\n    isConnected: boolean;\n    constructor(props: {}) {\n        super(props);\n        this.subscribtions = new Map()\n        this.subscribeCalls = new Map()\n        this.isConnected = false;\n\n    };\n\n    closeEventCallback = (one1: any) => {\n        console.log(one1);\n        this.isConnected = false;\n\n        let connectFunc = this.connect;\n        let reconnect = window.setTimeout(function () {\n\n            connectFunc();\n            window.clearTimeout(reconnect);\n        }, 5000);\n    }\n\n    connect = () => {\n        let sock = new SockJS(Const.URL.WS);\n\n        let connectCallback = () => {\n            this.isConnected = true;\n            this.subscribeCalls.forEach((func, topic) => {\n                this.subscribe(topic, func);\n            })\n        }\n\n        this.stompClient = Stomp.over(sock);\n        if (this.stompClient) {\n            this.stompClient.connect(\"login\", \"passcode\", connectCallback, this.closeEventCallback, \"host222\");\n        }\n    }\n\n    subscribe = (topic: string, callback: Function) => {\n        if (this.stompClient === null || !topic || !callback) {\n            return;\n        }\n\n        if (this.subscribtions.has(topic)) {\n            return;\n        }\n\n        if (!this.isConnected) {\n            this.subscribeCalls.set(topic, callback);\n            return;\n        }\n\n        let subscribtion = this.stompClient.subscribe(topic, callback);\n        this.subscribtions.set(topic, subscribtion);\n    }\n\n    unsubscribe = () => {\n        this.subscribtions.forEach((k, v: any) => {\n            console.log(k);\n            console.log(v);\n            k.unsubscribe();\n        })\n    }\n\n    disconnect = () => {\n        if (this.stompClient != null) {\n            this.stompClient.disconnect();\n        }\n        console.log(\"Disconnected\");\n    }\n}\nexport default new WebSocketService({});","import React from 'react';\n\nclass BeanContextAware extends React.Component {\n\n  constructor(props: {}) {\n    super(props);\n    this.context = {};\n  };\n\n  add = (bean: any) => {\n    if (!bean || !bean.state) {\n      throw new Error(\"Not allowed 'null' values for 'bean': \" + bean + \" !\");\n    }\n    let beanId = bean.beanId || bean.state.beanId || bean.props.beanId;\n    if (!beanId) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId + \" !\");\n    }\n    if (this.context[beanId]) {\n      console.warn(\"Bean with 'beanId': \" + beanId + \"is already registered under BeanContextAware!\");\n    }\n    this.context[beanId] = bean;\n  }\n\n  get = (beanId: string) => {\n    if (!beanId) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId + \" !\");\n    }\n    return this.context[beanId];\n  }\n\n  remove = (bean: any) => {\n    if (!bean) {\n      throw new Error(\"Not allowed 'null' value for 'bean' \" + bean + \" !\");\n    }\n    if (typeof bean === 'string') {\n      delete this.context[bean];\n      return;\n    }\n    let beanId = bean.beanId || bean.state.beanId || bean.props.beanId;\n    delete this.context[beanId];\n  }\n}\nexport default new BeanContextAware({});","\r\nconst Lang = {\r\n  414: {\r\n    BG: \"Раздаване на карти...\",\r\n    EN: \"Dealing Cards...\",\r\n  },\r\n  25: {\r\n    BG: \"Мешане и показване на картите...\",\r\n    EN: \"Shuffle And Reveal Deck Cards...\",\r\n  },\r\n  483: {\r\n    BG: \"Включване на играчи.. грешка\",\r\n    EN: \"Joining players... error\",\r\n  },\r\n  412: {\r\n    BG: \"Само по една карта може да се играе!\",\r\n    EN: \"Players must put not more than 1 card on deck!\",\r\n  },\r\n  413: {\r\n    BG: \"Всички играчи трябва да сложат карта\",\r\n    EN: \"All players must put a card!\",\r\n  },\r\n  213: {\r\n    BG: \"Слагане на карта.. ок\",\r\n    EN: \"Players put cards.. ok \",\r\n  },\r\n  26: {\r\n    BG: \"Започване на следващ кръг..\",\r\n    EN: \"Preparing next round..\",\r\n  },\r\n  205: {\r\n    BG: \"Даване на жокер .. ок\",\r\n    EN: \"Setting clue .. ok\",\r\n  },\r\n  47: {\r\n    BG: \"Даване на жокер ... грешка\",\r\n    EN: \"Setting clue ... error\",\r\n  },\r\n  201: {\r\n    BG: \"Избор на карта ..\",\r\n    EN: \"Vote for а card \",\r\n  },\r\n  433: {\r\n    BG: \"Избор на карта ... грешка\",\r\n    EN: \"Vote for а card ... error \",\r\n  },\r\n  425: {\r\n    BG: \"Още играчи трябва да изберат карти.\",\r\n    EN: \"Аll players must vote.\",\r\n  },\r\n  29: {\r\n    BG: \"Жокерът не може да се сменя!\",\r\n    EN: \"The clue cannot be changed!\",\r\n  },\r\n  409: {\r\n    BG: \"Няма жокер!\",\r\n    EN: \"Clue is not set!\",\r\n  },\r\n  410: {\r\n    BG: \"Не повече от 6 играчи!\",\r\n    EN: \"Maximum 6 players in the game!\",\r\n  },\r\n  417: {\r\n    BG: \"Вече си поставил картата си!\",\r\n    EN: \"You already put your card!\",\r\n  },\r\n  416: {\r\n    BG: \"Разказвачът играе пръв!\",\r\n    EN: \"Storyteller must play first!\",\r\n  },\r\n  861: {\r\n    BG: \"Намисли си жокер..\",\r\n    EN: \"Think of a clue.\",\r\n  },\r\n  862: {\r\n    BG: \"С коя карта ще играеш?\",\r\n    EN: \"Think of a card to play.\",\r\n  },\r\n  863: {\r\n    BG: \"Избери карта!\",\r\n    EN: \"Now vote for a card!\",\r\n  },\r\n  864: {\r\n    BG: \"Още играчи може да се вкллючат..\",\r\n    EN: \"Wait for players to join...\",\r\n  },\r\n  481: {\r\n    BG: \"Броене на точките...\",\r\n    EN: \"Counting Score finished...\",\r\n  },\r\n  VERSION: '1.0'\r\n}\r\n\r\nexport default Lang;\r\n","import React from 'react';\r\nimport WebSocketService from './WebSocketService';\r\nimport Lang from './Languages';\r\nimport ContextBeanAware from './ContextBeanAware'\r\nimport CardsContainerI from \"../components/Deck/parts/CardsContainerI\";\r\n\r\nclass CashService extends React.Component {\r\n  gameId: string | null;\r\n  language: string | null;\r\n  infoScreen: Array<any>;\r\n  ownCardProps: any;\r\n  deckCardProps: any;\r\n  currentPhase: string | null;\r\n  clue: string | null;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.infoScreen = [];\r\n    this.gameId = null;\r\n    this.ownCardProps = null;\r\n    this.deckCardProps = null;\r\n    this.currentPhase = null;\r\n    this.language = null;\r\n    this.clue = null;\r\n  };\r\n\r\n\r\n  subscribe = (id: string) => {\r\n    this.gameId = id;\r\n    WebSocketService.subscribe('/topic/' + this.gameId + '/msg', this.onMessage);\r\n    WebSocketService.subscribe('/user/topic/' + this.gameId + '/msg', this.onMessage);\r\n  }\r\n\r\n  //       {\r\n  //        \"info\": json,\r\n  //        \"deck\": json,\r\n  //        \"hand\": json,\r\n  //       \"warn\": json,\r\n  //       \"clue\": json,\r\n  //    }\r\n  onMessage = (wsMsg: any) => {\r\n    console.log(wsMsg);\r\n\r\n    let jsn = JSON.parse(wsMsg.body);\r\n    if (!jsn)\r\n      return;\r\n\r\n    if (!!jsn.deck)\r\n      this.onDeckCardsMessage(jsn.deck);\r\n    if (!!jsn.hand)\r\n      this.onHandCardsMessage(jsn.hand);\r\n    if (!!jsn.info)\r\n      this.onInfoMessage(jsn.info);\r\n    if (!!jsn.warn)\r\n      this.onWarnMessage(jsn.warn);\r\n    if (!!jsn.clue)\r\n      this.onClueMessage(jsn.clue);\r\n  }\r\n\r\n  setPhaseAndCode = (phase: string, code: number) => {\r\n    this.currentPhase = phase// + \"-\" + code\r\n  }\r\n\r\n  onClueMessage = (clue: any) => {\r\n    //  this.infoScreen.push(info);\r\n    console.log(\"================================== clue =========================================\");\r\n    console.log(clue);\r\n\r\n    this.setPhaseAndCode(clue.phase, clue.code)\r\n    if (clue.code === 255) {\r\n      this.setClue(clue);\r\n    }\r\n    this.updateInfoPanel();\r\n  }\r\n\r\n  onDeckCardsMessage = (deck: any) => {\r\n    this.deckCardProps = deck;\r\n    let DeckCardsContainer = ContextBeanAware.get(\"deckCardsContainer1\") as CardsContainerI;\r\n\r\n    if (!DeckCardsContainer) {\r\n      return;\r\n    }\r\n    DeckCardsContainer.setStateCardProps();\r\n  }\r\n\r\n  onHandCardsMessage = (hand: any) => {\r\n    this.ownCardProps = hand;\r\n    let OwnCardsContainer = ContextBeanAware.get(\"ownCardsContainer1\") as CardsContainerI;\r\n\r\n    if (!OwnCardsContainer) {\r\n      return;\r\n    }\r\n    OwnCardsContainer.setStateCardProps();\r\n  }\r\n\r\n  onInfoMessage = (info: any) => {\r\n    console.log(\"================================== on info Message=========================================\");\r\n    console.log(info);\r\n    let text = this.getTextForLanguage(info);\r\n    this.addToInfoScreen(text);\r\n    this.setPhaseAndCode(info.phase, info.code)\r\n    this.updateInfoPanel();\r\n  }\r\n\r\n  onWarnMessage = (warn: any) => {\r\n    console.info(\"===================== on Warn Message =========================\");\r\n    console.info(warn);\r\n    let text = this.getTextForLanguage(warn);\r\n    this.addToInfoScreen(text)\r\n    this.setPhaseAndCode(warn.phase, warn.code)\r\n    this.setConfirmButtonVisible(warn.code);\r\n    this.updateInfoPanel();\r\n\r\n  }\r\n\r\n  getTextForLanguage = (message: any) => {\r\n    console.info(\"===================== get Text For Language =========================\");\r\n    let language = this.language || \"EN\"\r\n    let text = (Lang as any)[message.code][language];\r\n\r\n    return text;\r\n  }\r\n\r\n  addToInfoScreen = (text: any) => {\r\n    console.log(text);\r\n\r\n    this.infoScreen.push(text);\r\n    //TODO: implement animation start trigger\r\n  }\r\n\r\n\r\n  setConfirmButtonVisible = (code: number) => {\r\n    // the codes are to confirm if a phase has to be finished manually\r\n    let allowedCodes = [47, 413, 433, 483]\r\n    if (allowedCodes.indexOf(code) == -1) {\r\n      return\r\n    }\r\n    let header1 = ContextBeanAware.get(\"header1\");\r\n\r\n    if (!header1) {\r\n      return;\r\n    }\r\n\r\n    header1.setConfirmButtonVisible();\r\n  }\r\n\r\n  setClue = (clue: any) => {\r\n    this.clue = clue?.text || '';\r\n  }\r\n\r\n  updateInfoPanel = () => {\r\n    let InfoPanel1 = ContextBeanAware.get(\"InfoPanel1\");\r\n    if (!InfoPanel1) {\r\n      return;\r\n    }\r\n\r\n    InfoPanel1.updateView()\r\n  }\r\n}\r\n\r\nexport default new CashService({});","import React from 'react';\nimport axios, { AxiosRequestConfig } from 'axios';\n\nclass AjaxService extends React.Component {\n  constructor(props: {}) {\n    super(props);\n    this.context = {};\n  };\n  execute = (method: AxiosRequestConfig[\"method\"], url: string, data: object | null, headers: object) => {\n    let arg: AxiosRequestConfig;\n    arg = {};\n    arg.method = method;\n    arg.url = url;\n    arg.data = data;\n    arg.withCredentials = true;\n    arg.headers = headers;\n\n    return axios(arg);\n  };\n\n  doPost = (url: string, data: object | null, headers: object) => {\n    return this.execute('post', url, data, this.getHeaders(headers));\n  };\n\n  doPut = (url: string, data: object, headers: object) => {\n    return this.execute('put', url, data, this.getHeaders(headers));\n  };\n\n  doGet = (url: string, headers: object) => {\n    return this.execute('get', url, {}, this.getHeaders(headers));\n  };\n\n  doDelete = (url: string, headers: object) => {\n    return this.execute('delete', url, {}, this.getHeaders(headers));\n  };\n\n  getHeaders = (headers: object) => {\n    return headers;\n  };\n}\n\nexport default new AjaxService({});","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport WebSocketService from '../services/WebSocketService';\nimport ContextBeanAware from '../services/ContextBeanAware';\nimport CashService from '../services/CashService';\nimport AjaxService from '../services/AjaxService';\nimport { RouteComponentProps } from 'react-router';\nimport Const from '../services/Constants';\n\ntype Props = { beanId: string, history: any } & RouteComponentProps<{}>;\n\ntype State = {\n  beanId: string,\n  isVisible: boolean,\n  isConfirmButtonVisible: boolean\n};\nclass Header extends React.Component<Props, State>{\n\n  initialTitle: string;\n  isConfirmButtonVisibleTimeout: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      beanId: props.beanId,\n      isVisible: true,\n      isConfirmButtonVisible: false\n\n    };\n    this.initialTitle = document.title;\n    this.isConfirmButtonVisibleTimeout = null\n  }\n\n  componentDidMount() {\n    ContextBeanAware.add(this);\n  }\n\n  componentWillUnmount() {\n    ContextBeanAware.remove(this);\n  }\n  changeState = (obj: any) => {\n    this.setState(obj);\n  }\n\n  changeButtonVisibility = (obj: any) => {\n    this.setState(obj);\n  }\n\n  nextPhase = () => {\n    let promise = AjaxService.doPost(Const.URL.BASE + CashService.gameId + '/next-phase', {}, {});\n\n    promise.then((data) => {\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n  confirmNextPhase = () => {\n    this.setState({ isConfirmButtonVisible: false });\n    let promise = AjaxService.doPost(Const.URL.BASE + CashService.gameId + '/confirm-next-phase', {}, {});\n\n    promise.then(() => {\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n  setConfirmButtonVisible = () => {\n    if (this.isConfirmButtonVisibleTimeout != null) {\n      return;\n    }\n\n    let service = this;\n\n    service.setState({ isConfirmButtonVisible: true });\n\n    this.isConfirmButtonVisibleTimeout = window.setTimeout(function () {\n      service.setState({ isConfirmButtonVisible: false });\n      window.clearTimeout(service.isConfirmButtonVisibleTimeout);\n      service.isConfirmButtonVisibleTimeout = null;\n\n    }, 5000);\n  }\n\n  unsubscribe = () => {\n    WebSocketService.unsubscribe()\n  }\n\n  exit = () => {\n    let promise = AjaxService.doGet(Const.URL.GAME + CashService.gameId + '/session', {});\n  }\n  render() {\n    let Btn = (props: any) => (\n      <div>\n        <NavLink activeClassName=\"active\" to={props.to}>\n          <button type=\"button\" className=\"btn btn-primary\">\n            {props.label}\n          </button>\n        </NavLink>\n      </div>\n    )\n\n    return (\n      <nav>\n        <div className=\"text-center\">\n          <div className=\"btn-group\">\n            {this.state.isVisible ? <Btn to=\"/main\" label=\"🏠 🌍 👋📑\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/game\" label=\"Game\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/deck\" label=\"Deck\" /> : null}\n\n            {this.state.isConfirmButtonVisible\n              ?\n              <button type=\"button\" onClick={this.confirmNextPhase} className=\"btn btn-primary\"> DO NEXT </button>\n              :\n              <button type=\"button\" onClick={this.nextPhase} className=\"btn btn-primary\"> NEXT </button>}\n\n\n       \n            <button type=\"button\" onClick={this.unsubscribe} className=\"btn btn-primary\"> unsubscribe </button>\n            <button type=\"button\" onClick={this.exit} className=\"btn btn-primary\"> exit  </button>\n          </div>\n          {this.state.isVisible ? <span className=\"float-right\"> ver: </span> : null}\n        </div>\n      </nav>\n    );\n  }\n}\nexport default withRouter(Header);\n\n","import React from \"react\";\nimport AjaxService from \"../../../services/AjaxService\";\nimport CashService from '../../../services/CashService';\nimport { CardStateI, CardProps } from \"./CardProps\";\nimport Const from '../../../services/Constants';\n\nclass OwnCard extends React.Component<CardProps, CardStateI> {\n  isEnabled: boolean;\n\n  constructor(props: CardProps) {\n    super(props);\n\n    this.state = {\n      opacity: props.opacity,\n      cardId: props.cardId,\n      imgSrc: props.imgSrc\n    };\n    this.isEnabled = true;\n  }\n\n  componentWillUnmount() {\n  }\n\n  componentDidMount() {\n  }\n\n  //TODO: remove this method; heavy operations\n  static getDerivedStateFromProps(newProps: any, currentState: any) {\n    if (currentState.opacity !== newProps.opacity) {\n      return {\n        opacity: newProps.opacity,\n        imgSrc: newProps.imgSrc,\n      }\n    }\n    return null\n  }\n\n  changeState = (obj: any) => {\n    this.setState(obj);\n  }\n  setImage = (imgSrc: string) => {\n    this.setState({ imgSrc: imgSrc });\n  }\n\n  setOpacity = (opacity: number) => {\n    this.setState({ opacity: opacity });\n  }\n\n  placeCardOnDeck = () => {\n    if (!this.isEnabled) {\n      return;\n    }\n    let cardId = this.state.cardId;\n    //TODO: const\n    let promise = AjaxService.doPost(Const.URL.BASE + CashService.gameId + \"/deck/card/\" + cardId, {}, {});\n    this.isEnabled = false;\n    //TODO: refactor isEnabled\n    promise.catch((error) => {\n      console.error(error);\n      this.isEnabled = true;\n\n    });\n  }\n\n\n  render() {\n    let cssClasses = 'opac float-left img-fluid rounded';\n    return (\n      <div id=\"dd2\" className=\"opac float-botftom contaidner-fluid\">\n        <img onClick={this.placeCardOnDeck} alt=\"some image\" style={{ opacity: this.state.opacity }} className={cssClasses}\n          src={this.state.imgSrc} />\n      </div>\n    );\n  }\n}\n\nexport default OwnCard;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport OwnCard from \"./OwnCard\";\nimport { CardProps } from \"./CardProps\";\nimport CardsContainerI from \"./CardsContainerI\";\nimport { RouteComponentProps } from 'react-router';\nimport ContextBeanAware from '../../../services/ContextBeanAware';\nimport CashService from '../../../services/CashService';\n\ntype Props = { beanId: string } & RouteComponentProps<{}>;\n\ntype State = {\n  cardProps: any\n};\n\nclass OwnCardsContainer extends React.Component<Props, State> implements CardsContainerI {\n\n  beanId: string;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      cardProps: this.getCardProps()\n    };\n    this.beanId = props.beanId;\n  }\n\n  componentDidMount() {\n    ContextBeanAware.add(this);\n  }\n\n  componentWillUnmount() {\n    ContextBeanAware.remove(this);\n    this.setState({ cardProps: null });\n  }\n\n  getCardProps = () => {\n    return CashService.ownCardProps\n  }\n\n  setStateCardProps = () => {\n    this.setState({ cardProps: this.getCardProps() });\n  }\n\n  onCardDrawResults = (ws: any) => {\n    let res = JSON.parse(ws.body)\n    this.setState({ cardProps: res });\n  }\n\n  clickOnCard = (cardOnclickFunc: Function) => {\n  }\n\n  render() {\n    let makeCards = (arg: any) => {\n      if (!arg) {\n        return (<div> </div>)\n      }\n      var indents = [];\n      for (var i = 0; i < arg.length; i++) {\n        let props = {\n          cardId: arg[i]?.cardId,\n          imgSrc: arg[i]?.imgSrc,\n          opacity: arg[i]?.opacity,\n          key:    arg[i]?.cardId\n        }\n\n        indents.push(\n          ((i: number, props: CardProps) => {\n            return (\n              <div key={i} className=\"col-sm\"  >\n                <OwnCard  {...props} />\n              </div>)\n          })(i, props)\n        );\n      }\n      return indents;\n    }\n\n    return (\n\n      <div id=\"ownCardsContainer3\" className=\"row\" >\n        {makeCards(this.state.cardProps)}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OwnCardsContainer);\n","import React from \"react\";\nimport AjaxService from \"../../../services/AjaxService\";\nimport { CardStateI, CardProps } from \"./CardProps\";\nimport CashService from '../../../services/CashService';\nimport Const from '../../../services/Constants';\n\nclass DeckCard extends React.Component<CardProps, CardStateI>{\n\n  constructor(props: CardProps) {\n    super(props);\n    this.state = {\n      opacity: props.opacity,\n      cardId: props.cardId,\n      imgSrc: props.imgSrc\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  changeState = (obj: any) => {\n    this.setState(obj);\n  }\n\n  doVote = () => {\n    let cardId = this.state.cardId;\n    //TODO: constants\n    let promise = AjaxService.doPost(Const.URL.BASE + CashService.gameId + \"/voting/card/\" + cardId, {}, {});\n    promise.catch((error) => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    let cssClasses = 'opac float-left img-fluid rounded';\n    return (\n      <div id=\"playedCard\" className=\"opac  float-botftom contaidner-fluid\">\n        <img onClick={this.doVote} alt=\"some image\" style={{ opacity: this.state.opacity }} className={cssClasses}\n          src={this.state.imgSrc} />\n      </div>\n    );\n  }\n}\n\nexport default DeckCard;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { CardProps } from \"./CardProps\";\nimport CardsContainerI from \"./CardsContainerI\";\nimport PlayedCard from \"./DeckCard\";\nimport { RouteComponentProps } from 'react-router';\nimport ContextBeanAware from '../../../services/ContextBeanAware';\nimport CashService from '../../../services/CashService';\n\ntype Props = { beanId: string } & RouteComponentProps<{}>;\n\ntype State = {\n  beanId: string,\n  isVisible: boolean,\n  cardProps: any\n\n};\n\nclass DeckCardsContainer extends React.Component<Props, State> implements CardsContainerI {\n  Refs: Array<any>\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      beanId: props.beanId,\n      isVisible: true,\n      cardProps: this.getCardProps()\n    };\n    this.Refs = [];\n  }\n\n  //@Override\n  setStateCardProps = () => {\n    this.setState({ cardProps: this.getCardProps() });\n  }\n\n  doVote = (cardId: string) => {\n    console.log(\"vote for this card\")\n  }\n\n  componentDidMount() {\n    ContextBeanAware.add(this);\n  }\n  componentWillUnmount() {\n    ContextBeanAware.remove(this)\n\n    this.setState({ cardProps: null });\n  }\n\n  getCardProps = () => {\n    return CashService.deckCardProps\n  }\n  render() {\n\n    let makeCards = (arg: any) => {\n\n      if (!arg) {\n        return (<div> </div>)\n      }\n      var indents = [];\n      for (var i = 0; i < arg.length; i++) {\n        let props = {\n          cardId: arg[i]?.cardId,\n          imgSrc: arg[i]?.imgSrc,\n          opacity: arg[i]?.opacity,\n          key:    arg[i]?.cardId\n        }\n\n        indents.push(\n          ((i: number, props: CardProps) => {\n            return (\n              <div key={i} className=\"col-sm\">\n                <PlayedCard  {...props} />\n              </div>)\n          })(i, props)\n        );\n      }\n      return indents;\n    }\n\n    return (\n      <div id=\"deckCardsContainer\" className=\"row\" >\n        {makeCards(this.state.cardProps)}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DeckCardsContainer);\n","import React from 'react';\r\nimport CashService from '../../../../services/CashService';\r\nimport AjaxService from '../../../../services/AjaxService';\r\nimport Const from '../../../../services/Constants';\r\nimport \"react-table/react-table.css\";\r\n\r\nfunction InputAndButton({ heading }: any) {\r\n\r\n  let [clueValue, setInputValue] = React.useState(\"\");\r\n\r\n  function onKeyPress(e: any) {\r\n    if (e.key !== 'Enter') {\r\n      return;\r\n    }\r\n    setClue();\r\n    setInputValue(\"\");\r\n  }\r\n\r\n  function onChange(e: any) {\r\n    var elem = e.srcElement || e.target;\r\n    setInputValue(elem.value)\r\n  }\r\n\r\n  function setClue() {\r\n    let promise = AjaxService.doPost(Const.URL.BASE + CashService.gameId + '/clue', {\r\n      'json': clueValue\r\n    }, {});\r\n\r\n    setInputValue(\"\");\r\n\r\n    promise.then((data) => {\r\n      console.log(data);\r\n\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n\r\n  }\r\n\r\n  let inputProps = {\r\n    placeholder: 'type......',\r\n    value: clueValue,\r\n    onChange: onChange,\r\n    onKeyPress: onKeyPress\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h6>{heading}</h6>\r\n      <input {...inputProps} type=\"text\" />\r\n      <button type=\"button\" onClick={setClue} className=\"btn btn-primary\"> Go!  </button>\r\n    </div >\r\n  )\r\n\r\n}\r\n\r\nexport default InputAndButton;\r\n","import React from 'react';\r\nimport ContextBeanAware from '../../../../services/ContextBeanAware';\r\nimport CashService from '../../../../services/CashService';\r\nimport InputAndButton from './InputAndButton';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\n\r\nimport logo from './genie.gif'\r\n\r\nimport \"react-table/react-table.css\";\r\n\r\ntype Props = { beanId: string } & RouteComponentProps<{}>;\r\n\r\ninterface IState {\r\n  view: any\r\n}\r\n\r\nclass Game extends React.Component<Props, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    let info = this.getView();\r\n    this.state = {\r\n      view: info\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    ContextBeanAware.add(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    ContextBeanAware.remove(this);\r\n  }\r\n\r\n  setView = (view: any) => {\r\n    this.setState({ view: view });\r\n  }\r\n\r\n  updateView = () => {\r\n    this.setView(this.getView())\r\n  }\r\n\r\n  getView = () => {\r\n\r\n    let text: String = \"\";\r\n    CashService.infoScreen.forEach((one: any) => {\r\n      if (!!one) {\r\n        text = one\r\n      }\r\n    })\r\n    return (\r\n      <div>\r\n        {text}\r\n        <p />\r\n        {!!CashService?.clue ? <label>\"Clue: \" {CashService.clue}</label> : \"\"}\r\n        <p />\r\n        {!!CashService?.currentPhase?.startsWith('Set Clue Phase') && !CashService?.clue ? <InputAndButton heading=\"Clue: \" /> : \"\"}\r\n      </div >\r\n    );\r\n\r\n  }\r\n\r\n  render() {\r\n    let data = [{\r\n      \"view\": this.state.view,\r\n      \"gif\":\r\n        (\r\n          <div className=\"container-fluid px-0\">\r\n            <img src={logo} alt=\"loading...\" className='img-fluid w-100' />\r\n          </div>\r\n        )\r\n    }];\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"view\"\r\n          },\r\n\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"gif\",\r\n            maxWidth: 250\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    const tableStyle = {\r\n      border: \"none\",\r\n      boxShadow: \"none\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <ReactTable className=\"\"\r\n          data={data}\r\n          style={tableStyle}\r\n          columns={present}\r\n          sortable={false}\r\n          defaultPageSize={1}\r\n          showPagination={false}\r\n          TheadComponent={() => null}\r\n        />\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Game);\r\n\r\n\r\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport OwnCardsContainer from \"./parts/OwnCardsContainer\";\nimport PlayedCardsContainer from \"./parts/DeckCardsContainer\";\nimport InfoPanel from \"./parts/InfoPanel/InfoPanel\";\nimport { RouteComponentProps } from 'react-router';\n\ntype Props = { beanId: string, history: any } & RouteComponentProps<{}>;\n\ntype State = {\n  beanId: string,\n  isVisible: boolean\n};\n\nclass Deck extends React.Component<Props, State>{\n  constructor(props: Props) {\n    super(props);\n\n  }\n  changeState = (obj: any) => {\n    this.setState(obj);\n  }\n\n  changeButtonVisibility = (obj: any) => {\n    this.setState(obj);\n  }\n\n  render() {\n\n    return (\n      <div id=\"dd2\" className=\"float-bottom text-center\">\n        <InfoPanel beanId=\"InfoPanel1\" />\n        <PlayedCardsContainer beanId=\"deckCardsContainer1\" />\n        <OwnCardsContainer beanId=\"ownCardsContainer1\" />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Deck);","import React from 'react';\nimport AjaxService from './AjaxService';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants';\n\nclass GameService extends React.Component {\n  gameSearchResults: Array<any>;\n  constructor(props: {}) {\n    super(props);\n    this.gameSearchResults = [];\n  };\n\n  createGame = (name: string, hidden: boolean, lang: String) => {\n    return AjaxService.doPost(Const.URL.GAME, {\n      'name': name,\n      'hidden': hidden,\n      'lang': lang\n    }, {});\n\n  };\n\n  searchGame = (name: string, hidden: boolean, lang: String) => {\n    //TODO: refactor parameters:\n    return AjaxService.doGet(Const.URL.GAMES + '?name=' + name + '&hidden=' + hidden + '&lang=' + lang, {});\n  };\n\n  joinGame = (id: string) => {\n    CashService.subscribe(id);\n  };\n\n}\n\nexport default new GameService({});","import React from 'react';\r\nimport GameService from '../../services/GameService';\r\nimport CashService from '../../services/CashService';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"react-table/react-table.css\";\r\n\r\ntype Props = { beanId: string } & RouteComponentProps<{}>;\r\n\r\ninterface IState {\r\n  nameValue: string,\r\n}\r\n\r\nclass Game extends React.Component<Props, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      nameValue: '',\r\n    };\r\n  }\r\n\r\n  onKeyPressCreate = (e: any) => {\r\n    if (e.key !== 'Enter') {\r\n      return;\r\n    }\r\n    this.setState({ nameValue: '' });\r\n  }\r\n\r\n  onChangeCreate = (e: any) => {\r\n    var elem = e.srcElement || e.target;\r\n    this.setState({ nameValue: elem.value })\r\n  }\r\n\r\n  createGame = () => {\r\n    let promise = GameService.createGame(this.state.nameValue, false, 'en');\r\n    promise.then((data) => {\r\n      CashService.subscribe(data.data[0].id);\r\n      this.props.history.push({\r\n        pathname: '/deck'\r\n      })\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let inputProps = {\r\n      placeholder: 'name...',\r\n      value: this.state?.nameValue,\r\n      onChange: this.onChangeCreate,\r\n      onKeyPress: this.onKeyPressCreate\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h5>Create game:</h5>\r\n        <input {...inputProps} type=\"text\" />\r\n        <button type=\"button\" onClick={this.createGame} className=\"btn btn-primary\"> Go! </button>\r\n\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(Game);\r\n\r\n\r\n","import React from 'react';\r\nimport GameService from '../../services/GameService';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"react-table/react-table.css\";\r\n\r\ntype Props = { beanId: string } & RouteComponentProps<{}>;\r\n\r\ninterface IState {\r\n  searchNameVal: string,\r\n  gameSearchResults: Array<any>;\r\n}\r\n\r\nclass Game extends React.Component<Props, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      searchNameVal: '',\r\n      gameSearchResults: GameService?.gameSearchResults || []\r\n\r\n    };\r\n  }\r\n\r\n  setStateGameSearchResults = () => {\r\n    let res = GameService.gameSearchResults || []\r\n    this.setState({ gameSearchResults: res });\r\n  }\r\n\r\n  onKeyPressSearch = (e: any) => {\r\n    if (e.key !== 'Enter') {\r\n      return;\r\n    }\r\n\r\n    this.setState({ searchNameVal: '' });\r\n  }\r\n\r\n  onChangeSearch = (e: any) => {\r\n    var elem = e.srcElement || e.target;\r\n    this.setState({ searchNameVal: elem.value })\r\n  }\r\n\r\n\r\n  searchGames = () => {\r\n    let promise = GameService.searchGame(this.state.searchNameVal, false, 'en');\r\n    promise.then((data: AxiosResponse<any>) => {\r\n      GameService.gameSearchResults = data.data;\r\n      this.setStateGameSearchResults();\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n\r\n  seeGameInfo = (rowInfo: any) => {\r\n    this.props.history.push({\r\n      pathname: '/game-info',\r\n      state: rowInfo\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let tableData = this.state.gameSearchResults || []\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"Name\",\r\n            accessor: \"name\"\r\n          },\r\n          {\r\n            Header: \"Players in (6 max)\",\r\n            accessor: \"players\"\r\n          },\r\n          {\r\n            Header: \"Creator\",\r\n            accessor: \"creator\"\r\n          },\r\n          {\r\n            Header: \"Language\",\r\n            accessor: \"lang\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    let srchInputProps = {\r\n      placeholder: 'name...',\r\n      value: this.state?.searchNameVal,\r\n      onChange: this.onChangeSearch,\r\n      onKeyPress: this.onKeyPressSearch\r\n    };\r\n\r\n    const tableStyle = {\r\n      border: \"none\",\r\n      boxShadow: \"none\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h5>Search game:</h5>\r\n        <input {...srchInputProps} type=\"text\" />\r\n        <button type=\"button\" onClick={this.searchGames} className=\"btn btn-primary\"> Go! </button>\r\n        <ReactTable className=\"-striped -highlight\"\r\n          data={tableData}\r\n          columns={present}\r\n          sortable={true}\r\n          defaultPageSize={5}\r\n          style={tableStyle}\r\n\r\n          getTrProps={(state: any, rowInfo: any) => {\r\n            return {\r\n              onClick: (e: any) => {\r\n                this.seeGameInfo(rowInfo)\r\n              },\r\n            }\r\n          }}\r\n        />\r\n        <br />\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Game);\r\n\r\n","import React from 'react';\r\nimport GameService from '../../services/GameService';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"react-table/react-table.css\";\r\n\r\ntype Props = { beanId: string } & RouteComponentProps<{}>;\r\n\r\ninterface IState {\r\n  nameValue: string,\r\n  gameSearchResults: Array<any>;\r\n}\r\n\r\nclass Game extends React.Component<Props, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      nameValue: '',\r\n      gameSearchResults: GameService.gameSearchResults\r\n    };\r\n  }\r\n\r\n  createGame = () => {\r\n  }\r\n\r\n  seeGameInfo = (rowInfo: any) => {\r\n    this.props.history.push({\r\n      pathname: '/game-info',\r\n      state: rowInfo\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h5>Current Game:</h5>\r\n        <h6>Score:</h6>\r\n        <p />\r\n        <button type=\"button\" onClick={this.createGame} className=\"btn btn-primary\"> Leave game! </button>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Game);\r\n\r\n\r\n","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\ntype Props = { beanId: string } & RouteComponentProps<{}>;\r\n\r\ninterface IState {\r\n}\r\n\r\nclass Game extends React.Component<Props, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h5>Game help game:</h5>\r\n      Lorem ispum... sdfs fsd fs dfs sdfs fs sdfs sdfs fsd fs dfsfs fsd, fs dfs sdfs fsd f sdfs fsd fs dfs sdfs fsd fs dfss dfs.\r\n      Tfs fsd fs dfs sdfs fs sdfs sdfs fsd fs dfsfs fsd, fs dfs sdfs fsd f sdfs fsd fs dfs sdfs fsd fs dfss dfs.\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Game);\r\n\r\n\r\n","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\nimport GameCreate from '../Game/GameCreate';\r\nimport GameSearch from '../Game/GameSearch';\r\nimport GameCurrent from '../Game/GameCurrent';\r\nimport GameHelp from '../Game/GameHelp';\r\nimport \"react-table/react-table.css\";\r\n\r\ntype Props = { beanId: string } & RouteComponentProps<{}>;\r\n\r\ninterface IState {\r\n  view: any\r\n}\r\n\r\nclass Game extends React.Component<Props, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      view: ''\r\n    };\r\n  }\r\n\r\n  show = (view: string) => {\r\n    if (view === '1') {\r\n      this.setState({ view: <GameCreate beanId='GameCreate11' /> })\r\n    } else if (view === '2') {\r\n      this.setState({ view: <GameSearch beanId='GameSearch11' /> })\r\n    } else if (view === '3') {\r\n      this.setState({ view: <GameCurrent beanId='GameCurrent11' /> })\r\n    } else {\r\n      this.setState({ view: <GameHelp beanId='GameHelp11' /> })\r\n    }\r\n  }\r\n\r\n  seeGameInfo = (rowInfo: any) => {\r\n    this.props.history.push({\r\n      pathname: '/game-info',\r\n      state: rowInfo\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let person = [{\r\n      \"create\": <button type=\"button\" onClick={() => { this.show(\"1\") }} className=\"btn btn-primary\"> New Game </button>,\r\n      \"search\": <button type=\"button\" onClick={() => { this.show(\"2\") }} className=\"btn btn-primary\"> Search Games </button>,\r\n      \"info\": <button type=\"button\" onClick={() => { this.show(\"3\") }} className=\"btn btn-primary\"> This Game </button>,\r\n      \"help\": <button type=\"button\" onClick={() => { this.show(\"4\") }} className=\"btn btn-primary\"> Help </button>,\r\n    }];\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"create\"\r\n          },\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"search\"\r\n          },\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"info\"\r\n\r\n          },\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"help\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    const tableStyle = {\r\n      border: \"none\",\r\n      boxShadow: \"none\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <ReactTable className=\"\"\r\n            data={person}\r\n            style={tableStyle}\r\n            columns={present}\r\n            sortable={false}\r\n            defaultPageSize={1}\r\n            showPagination={false}\r\n            TheadComponent={() => null}// hides the header\r\n          />\r\n          <br />\r\n        </div>\r\n        {this.state.view}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(Game);\r\n\r\n\r\n","import React from 'react';\r\nimport GameService from '../../services/GameService';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\ntype Props = { beanId: string } & RouteComponentProps<{}>;\r\n\r\ninterface IState {\r\n}\r\n\r\nclass GameInfo extends React.Component<Props, IState> {\r\n  data: any;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.data = [props?.location?.state?.original] || [];\r\n  }\r\n\r\n  joinGame = () => {\r\n    GameService.joinGame(this.data[0].id);\r\n  }\r\n\r\n  render() {\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"Players: \" + this.data[0].players,\r\n            accessor: \"players\"\r\n          },\r\n          {\r\n            Header: \"Creator\",\r\n            accessor: \"creator\"\r\n          },\r\n          {\r\n            Header: \"Language\",\r\n            accessor: \"lang\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    const tableStyle = {\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h5>Join game: {this.data[0].name}</h5>\r\n        <div className=\"text-center\">\r\n          <ReactTable className=\"-striped -highlight\"\r\n            data={this.data}\r\n            style={tableStyle}\r\n            columns={present}\r\n            sortable={false}\r\n            defaultPageSize={1}\r\n            showPagination={false}\r\n          />\r\n          <br />\r\n        </div>\r\n        <button type=\"button\" onClick={this.joinGame} className=\"btn btn-primary\"> Go! </button>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GameInfo);\r\n\r\n","import React from 'react';\r\nimport WebSocketService from '../../services/WebSocketService';\r\nimport AjaxService from '../../services/AjaxService';\r\nimport Const from '../../services/Constants';\r\n\r\ninterface ILoginState {\r\n  nameValue: string\r\n}\r\n\r\nclass Login extends React.Component<{}, ILoginState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nameValue: ''\r\n    };\r\n  }\r\n\r\n  onKeyPress = (e: any) => {\r\n    if (e.key !== 'Enter') {\r\n      return;\r\n    }\r\n    this.dologin();\r\n    this.setState({ nameValue: '' });\r\n  }\r\n\r\n  onChange = (e: any) => {\r\n    var elem = e.srcElement || e.target;\r\n    this.setState({ nameValue: elem.value })\r\n  }\r\n\r\n  dologin = () => {\r\n    console.log(this.state.nameValue);\r\n\r\n    let promise = AjaxService.doPost(Const.URL.LOGIN, null, {\r\n      pswd: \"a\", //TODO: remove\r\n      usrnm: this.state?.nameValue\r\n    })\r\n    this.setState({ nameValue: '' });\r\n    promise.then((data) => {\r\n      WebSocketService.connect()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let inputProps = {\r\n      placeholder: 'name...',\r\n      value: this.state?.nameValue,\r\n      onChange: this.onChange,\r\n      onKeyPress: this.onKeyPress\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Welcome</h1>\r\n        <input {...inputProps} type=\"text\" />\r\n        <button type=\"button\" onClick={this.dologin} className=\"btn btn-primary\"> login </button>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\nimport Login from '../MainMenu/Login';\r\nimport GameSearch from '../Game/GameSearch';\r\nimport GameCurrent from '../Game/GameCurrent';\r\nimport GameHelp from '../Game/GameHelp';\r\nimport \"react-table/react-table.css\";\r\n\r\ntype Props = { beanId: string } & RouteComponentProps<{}>;\r\n\r\ninterface IState {\r\n  view: any,\r\n}\r\n\r\nclass MainMenu extends React.Component<Props, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      view: '',\r\n    };\r\n  }\r\n\r\n  show = (view: string) => {\r\n    if (view === '1') {\r\n      this.setState({ view: <Login /> })\r\n    } else if (view === '2') {\r\n      this.setState({ view: <GameSearch beanId='GameSearch11' /> })\r\n    } else if (view === '3') {\r\n      this.setState({ view: <GameCurrent beanId='GameCurrent11' /> })\r\n    } else {\r\n      this.setState({ view: <GameHelp beanId='GameHelp11' /> })\r\n    }\r\n  }\r\n\r\n  seeGameInfo = (rowInfo: any) => {\r\n    this.props.history.push({\r\n      pathname: '/game-info',\r\n      state: rowInfo\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let person = [{\r\n      \"create\": <button type=\"button\" onClick={() => { this.show(\"1\") }} className=\"btn btn-primary\"> Login </button>,\r\n      \"search\": <button type=\"button\" onClick={() => { this.show(\"2\") }} className=\"btn btn-primary\"> Search Games </button>,\r\n      \"info\": <button type=\"button\" onClick={() => { this.show(\"3\") }} className=\"btn btn-primary\"> This Game </button>,\r\n      \"help\": <button type=\"button\" onClick={() => { this.show(\"4\") }} className=\"btn btn-primary\"> Help </button>,\r\n    }];\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"create\"\r\n          },\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"search\"\r\n          },\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"info\"\r\n\r\n          },\r\n          {\r\n            Header: \"_\",\r\n            accessor: \"help\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    const tableStyle = {\r\n      border: \"none\",\r\n      boxShadow: \"none\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <ReactTable className=\"\"\r\n            data={person}\r\n            style={tableStyle}\r\n            columns={present}\r\n            sortable={false}\r\n            defaultPageSize={1}\r\n            showPagination={false}\r\n            TheadComponent={() => null}// hides the header\r\n          />\r\n          <br />\r\n        </div>\r\n        {this.state.view}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(MainMenu);\r\n\r\n\r\n","import React from 'react';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport Deck from './components/Deck/Deck';\nimport Game from './components/Game/Game';\nimport GameInfo from './components/Game/GameInfo';\nimport MainMenu from './components/MainMenu/MainMenu';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\ndocument.body.classList.add('bg-success');\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n      <Router basename={'/'}>\n        <Header beanId=\"header1\" />\n        <Switch>\n          < Route path=\"/main\" component={MainMenu} />\n          < Route path=\"/game\" component={Game} />\n          < Route path=\"/game-info\" component={GameInfo} />\n          < Route path=\"/deck\" component={Deck} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/genie.65a3553a.gif\";"],"sourceRoot":""}